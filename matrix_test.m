% Overall test wrapper to generate some random values, and compare the
% matrix multiply results generated by MATLAB against C implementations.
function matrix_test 
   weights = complex(rand([5 8],'single') - 0.5, rand([5 8],'single') - 0.5);
   samples = complex(rand([8 1024],'single') - 0.5, rand([8 1024],'single') - 0.5);
   matlab_output = weights * samples;

   funcs = {@c_matrix_multiply @c_avx_split_matrix_multiply @c_avx_interleave_matrix_multiply};
   for index=1:length(funcs)
       matrix_func = funcs{index};
       f = functions(matrix_func);
       fprintf ('Calling %s\n', f.function);
       c_output = matrix_func(weights, samples);
       differences = c_output - matlab_output;
       [differences_rows, differences_row_indices] = max(abs(differences));
       [max_difference, max_difference_col] = max(differences_rows);
       max_difference_row = differences_row_indices(max_difference_col);
       fprintf ('Max abs difference = %.8g, at row %d col %d\n', ...
           max_difference, max_difference_row, max_difference_col);
       fprintf ('For max difference : matlab_output = %.8g%+.8gi, c_output = %.8g%+.8gi\n', ...
           real(matlab_output(max_difference_row, max_difference_col)), ...
           imag(matlab_output(max_difference_row, max_difference_col)), ...
           real(c_output(max_difference_row, max_difference_col)), ...
           imag(c_output(max_difference_row, max_difference_col)));
   end
end

